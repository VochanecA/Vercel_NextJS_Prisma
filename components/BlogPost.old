import React from 'react';
import { MDXRemote } from 'next-mdx-remote';
import { serialize } from 'next-mdx-remote/serialize';
import matter from 'gray-matter';
import fs from 'fs';
import path from 'path';

interface BlogPostProps {
  source: any;
  frontMatter: any;
}

const BlogPost: React.FC<BlogPostProps> = ({ source, frontMatter }) => {
  return (
    <article>
      <h1 className="text-4xl font-bold mb-4">{frontMatter.title}</h1>
      <div className="text-gray-700 mb-4">{frontMatter.date}</div>
      <MDXRemote {...source} />
    </article>
  );
};

export default BlogPost;

export async function generateStaticParams() {
  const postsDirectory = path.join(process.cwd(), 'posts');
  const filenames = fs.readdirSync(postsDirectory);

  const paths = filenames.map((filename) => {
    return {
      slug: filename.replace(/\.mdx$/, ''),
    };
  });

  return paths;
}

export async function generateMetadata({ params }: { params: { slug: string } }) {
  const postFilePath = path.join(process.cwd(), 'posts', `${params.slug}.mdx`);
  const source = fs.readFileSync(postFilePath, 'utf8');
  const { content, data } = matter(source);
  const mdxSource = await serialize(content, {});

  return {
    props: {
      source: mdxSource,
      frontMatter: data,
    },
  };
}
